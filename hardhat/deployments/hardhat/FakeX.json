{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizationUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "ChangeMinter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFER_WITH_AUTHORIZATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowlist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "authorizationState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dropzero",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "invitationSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validAfter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validBefore",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "transferWithAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb6b8db13846b056b8276e516b0fcb61f4750562141b5e4b2a6569bb0757e0f8e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2001266",
    "logsBloom": "0x
    "blockHash": "0x9a8f2310b5ebd69f57fa117da0d53feba4e42ace1e38f52c6e53204c8f096efe",
    "transactionHash": "0xb6b8db13846b056b8276e516b0fcb61f4750562141b5e4b2a6569bb0757e0f8e",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2001266",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "ac45e75192c16eff2f012f4d104df3c0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"AuthorizationUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"ChangeMinter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_WITH_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowlist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"authorizationState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropzero\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"invitationSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"transferWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FakeX.sol\":\"FakeX\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/FakeX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n// Lightweight token modelled after UNI-LP:\\n// https://github.com/Uniswap/uniswap-v2-core/blob/v1.0.1/contracts/UniswapV2ERC20.sol\\n// Adds:\\n//   - An exposed `mint()` with minting role\\n//   - An exposed `burn()`\\n//   - ERC-3009 (`transferWithAuthorization()`)\\ncontract FakeX is IERC20 {\\n    // bytes32 private constant EIP712DOMAIN_HASH =\\n    // keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\\n    bytes32 private constant EIP712DOMAIN_HASH = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f;\\n\\n    // bytes32 private constant NAME_HASH = keccak256(\\\"X\\\")\\n    bytes32 private constant NAME_HASH = 0x550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56;\\n\\n    // bytes32 private constant VERSION_HASH = keccak256(\\\"1\\\")\\n    bytes32 private constant VERSION_HASH = 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6;\\n\\n    // bytes32 public constant PERMIT_TYPEHASH =\\n    // keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\n\\n    // bytes32 public constant TRANSFER_WITH_AUTHORIZATION_TYPEHASH =\\n    // keccak256(\\\"TransferWithAuthorization(address from,address to,uint256 value,uint256 validAfter,uint256 validBefore,bytes32 nonce)\\\");\\n    bytes32 public constant TRANSFER_WITH_AUTHORIZATION_TYPEHASH =\\n        0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267;\\n\\n    string public constant name = \\\"fX\\\";\\n    string public constant symbol = \\\"fX\\\";\\n    uint8 public constant decimals = 2;\\n\\n    uint256 public override totalSupply;\\n\\n    mapping(address => uint256) public override balanceOf;\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n\\n    // ERC-2612, ERC-3009 state\\n    mapping(address => uint256) public nonces;\\n    mapping(address => mapping(bytes32 => bool)) public authorizationState;\\n\\n    // Token X specific\\n    mapping(address => bool) public allowlist;\\n    mapping(address => bool) public invitationSpent;\\n    address public dropzero;\\n\\n    event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce);\\n    event ChangeMinter(address indexed minter);\\n\\n    constructor() {\\n        dropzero = msg.sender;\\n    }\\n\\n    function _validateSignedData(\\n        address signer,\\n        bytes32 encodeData,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal view {\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", getDomainSeparator(), encodeData));\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\n        // Explicitly disallow authorizations for address(0) as ecrecover returns address(0) on malformed messages\\n        require(recoveredAddress != address(0) && recoveredAddress == signer, \\\"X:INVALID_SIGNATURE\\\");\\n    }\\n\\n    function mint(address to, uint256 value) external {\\n        require(msg.sender == dropzero, \\\"MINT: ONLY_DROPZERO\\\");\\n        _mint(to, value);\\n        allowlist[to] = true;\\n    }\\n\\n    function renounceMinter() external {\\n        require(block.timestamp > 1637366400, \\\"AFTER 1637366400 (20th of November)\\\");\\n        dropzero = address(0);\\n    }\\n\\n    function _mint(address to, uint256 value) internal {\\n        totalSupply = totalSupply + value;\\n        balanceOf[to] = balanceOf[to] + value;\\n        emit Transfer(address(0), to, value);\\n    }\\n\\n    function _addToAllowList(address from, address to) internal {\\n        if (allowlist[to] == false && invitationSpent[from] == false) {\\n            invitationSpent[from] = true;\\n            allowlist[to] = true;\\n        }\\n    }\\n\\n    function _burn(address from, uint256 value) internal {\\n        // Balance is implicitly checked with Solidity's underflow protection\\n        balanceOf[from] = balanceOf[from] - value;\\n        totalSupply = totalSupply - value;\\n        emit Transfer(from, address(0), value);\\n    }\\n\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 value\\n    ) private {\\n        allowance[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) private {\\n        require(to != address(this) && to != address(0), \\\"X:RECEIVER_IS_TOKEN_OR_ZERO\\\");\\n        require(allowlist[from] == true, \\\"blockzerolabs.io/x/getInvite\\\");\\n        _addToAllowList(from, to);\\n        require(allowlist[to] == true, \\\"blockzerolabs.io/x/getInvite\\\");\\n\\n        // Balance is implicitly checked with Solidity's underflow protection\\n        balanceOf[from] = balanceOf[from] - value;\\n        balanceOf[to] = balanceOf[to] + value;\\n        emit Transfer(from, to, value);\\n    }\\n\\n    function getChainId() public view returns (uint256 chainId) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            chainId := chainid()\\n        }\\n    }\\n\\n    function getDomainSeparator() public view returns (bytes32) {\\n        return keccak256(abi.encode(EIP712DOMAIN_HASH, NAME_HASH, VERSION_HASH, getChainId(), address(this)));\\n    }\\n\\n    function burn(uint256 value) external returns (bool) {\\n        _burn(msg.sender, value);\\n        return true;\\n    }\\n\\n    function approve(address spender, uint256 value) external override returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 value) external override returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external override returns (bool) {\\n        uint256 fromAllowance = allowance[from][msg.sender];\\n        if (fromAllowance != type(uint256).max) {\\n            // Allowance is implicitly checked with Solidity's underflow protection\\n            allowance[from][msg.sender] = fromAllowance - value;\\n        }\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        require(deadline >= block.timestamp, \\\"X:AUTH_EXPIRED\\\");\\n\\n        bytes32 encodeData = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner], deadline));\\n        nonces[owner] = nonces[owner] + 1;\\n        _validateSignedData(owner, encodeData, v, r, s);\\n\\n        _approve(owner, spender, value);\\n    }\\n\\n    function transferWithAuthorization(\\n        address from,\\n        address to,\\n        uint256 value,\\n        uint256 validAfter,\\n        uint256 validBefore,\\n        bytes32 nonce,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        require(block.timestamp > validAfter, \\\"X:AUTH_NOT_YET_VALID\\\");\\n        require(block.timestamp < validBefore, \\\"X:AUTH_EXPIRED\\\");\\n        require(!authorizationState[from][nonce], \\\"X:AUTH_ALREADY_USED\\\");\\n\\n        bytes32 encodeData =\\n            keccak256(\\n                abi.encode(TRANSFER_WITH_AUTHORIZATION_TYPEHASH, from, to, value, validAfter, validBefore, nonce)\\n            );\\n        _validateSignedData(from, encodeData, v, r, s);\\n\\n        authorizationState[from][nonce] = true;\\n        emit AuthorizationUsed(from, nonce);\\n\\n        _transfer(from, to, value);\\n    }\\n}\",\"keccak256\":\"0x96e665ca7608eda8934213403d82dc3adcb69a11effea78d436585f101780968\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122f1806100616000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637ecebe00116100c3578063cd4e3e081161007c578063cd4e3e08146103b8578063d505accf146103e8578063dd62ed3e14610404578063e3ee160e14610434578063e94a010214610450578063ed24911d146104805761014d565b80637ecebe00146102e257806395d89b41146103125780639865027514610330578063a0cc6a681461033a578063a7cd52cb14610358578063a9059cbb146103885761014d565b8063313ce56711610115578063313ce5671461020c5780633408e4701461022a57806340c10f191461024857806342966c6814610264578063569193971461029457806370a08231146102b25761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd146101a057806323b872dd146101be57806330adf81f146101ee575b600080fd5b61015a61049e565b6040516101679190611dde565b60405180910390f35b61018a600480360381019061018591906119ab565b6104d7565b6040516101979190611c40565b60405180910390f35b6101a86104ee565b6040516101b59190611f00565b60405180910390f35b6101d860048036038101906101d391906117ac565b6104f4565b6040516101e59190611c40565b60405180910390f35b6101f6610641565b6040516102039190611c5b565b60405180910390f35b610214610668565b6040516102219190611f1b565b60405180910390f35b61023261066d565b60405161023f9190611f00565b60405180910390f35b610262600480360381019061025d91906119ab565b610675565b005b61027e600480360381019061027991906119eb565b61076b565b60405161028b9190611c40565b60405180910390f35b61029c610780565b6040516102a99190611c25565b60405180910390f35b6102cc60048036038101906102c7919061173f565b6107a6565b6040516102d99190611f00565b60405180910390f35b6102fc60048036038101906102f7919061173f565b6107be565b6040516103099190611f00565b60405180910390f35b61031a6107d6565b6040516103279190611dde565b60405180910390f35b61033861080f565b005b610342610899565b60405161034f9190611c5b565b60405180910390f35b610372600480360381019061036d919061173f565b6108c0565b60405161037f9190611c40565b60405180910390f35b6103a2600480360381019061039d91906119ab565b6108e0565b6040516103af9190611c40565b60405180910390f35b6103d260048036038101906103cd919061173f565b6108f7565b6040516103df9190611c40565b60405180910390f35b61040260048036038101906103fd91906118c9565b610917565b005b61041e6004803603810190610419919061176c565b610aa2565b60405161042b9190611f00565b60405180910390f35b61044e600480360381019061044991906117ff565b610ac7565b005b61046a6004803603810190610465919061196b565b610d14565b6040516104779190611c40565b60405180910390f35b610488610d43565b6040516104959190611c5b565b60405180910390f35b6040518060400160405280600281526020017f665800000000000000000000000000000000000000000000000000000000000081525081565b60006104e4338484610de9565b6001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461062a5782816105a99190611fb3565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610635858585610ed4565b60019150509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b600281565b600046905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc90611e80565b60405180910390fd5b61070f8282611232565b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000610777338361133e565b60019050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b6040518060400160405280600281526020017f665800000000000000000000000000000000000000000000000000000000000081525081565b6361983a804211610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c90611e00565b60405180910390fd5b6000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226760001b81565b60056020528060005260406000206000915054906101000a900460ff1681565b60006108ed338484610ed4565b6001905092915050565b60066020528060005260406000206000915054906101000a900460ff1681565b4284101561095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190611e60565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888600360008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054896040516020016109d996959493929190611c76565b6040516020818303038152906040528051906020012090506001600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a3d9190611f5d565b600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a8d888286868661144a565b610a98888888610de9565b5050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b854211610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0090611ee0565b60405180910390fd5b844210610b4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4290611e60565b60405180910390fd5b600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff1615610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be090611e20565b60405180910390fd5b60007f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226760001b8a8a8a8a8a8a604051602001610c2b9796959493929190611cd7565b604051602081830303815290604052805190602001209050610c508a8286868661144a565b6001600460008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff021916908315150217905550848a73ffffffffffffffffffffffffffffffffffffffff167f98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a560405160405180910390a3610d088a8a8a610ed4565b50505050505050505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60001b7f550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d5660001b7fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660001b610db961066d565b30604051602001610dce959493929190611d46565b60405160208183030381529060405280519060200120905090565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ec79190611f00565b60405180910390a3505050565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015610f3d5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610f7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7390611ea0565b60405180910390fd5b60011515600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461100f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100690611e40565b60405180910390fd5b6110198383611581565b60011515600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146110ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a390611e40565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110f79190611fb3565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111859190611f5d565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112259190611f00565b60405180910390a3505050565b806000546112409190611f5d565b60008190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112919190611f5d565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113329190611f00565b60405180910390a35050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113899190611fb3565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806000546113da9190611fb3565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161143e9190611f00565b60405180910390a35050565b6000611454610d43565b85604051602001611466929190611bee565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516114a39493929190611d99565b6020604051602081039080840390855afa1580156114c5573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561153957508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156f90611ec0565b60405180910390fd5b50505050505050565b60001515600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515148015611631575060001515600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b156116e7576001600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050565b6000813590506116fa8161225f565b92915050565b60008135905061170f81612276565b92915050565b6000813590506117248161228d565b92915050565b600081359050611739816122a4565b92915050565b600060208284031215611755576117546120b2565b5b6000611763848285016116eb565b91505092915050565b60008060408385031215611783576117826120b2565b5b6000611791858286016116eb565b92505060206117a2858286016116eb565b9150509250929050565b6000806000606084860312156117c5576117c46120b2565b5b60006117d3868287016116eb565b93505060206117e4868287016116eb565b92505060406117f586828701611715565b9150509250925092565b60008060008060008060008060006101208a8c031215611822576118216120b2565b5b60006118308c828d016116eb565b99505060206118418c828d016116eb565b98505060406118528c828d01611715565b97505060606118638c828d01611715565b96505060806118748c828d01611715565b95505060a06118858c828d01611700565b94505060c06118968c828d0161172a565b93505060e06118a78c828d01611700565b9250506101006118b98c828d01611700565b9150509295985092959850929598565b600080600080600080600060e0888a0312156118e8576118e76120b2565b5b60006118f68a828b016116eb565b97505060206119078a828b016116eb565b96505060406119188a828b01611715565b95505060606119298a828b01611715565b945050608061193a8a828b0161172a565b93505060a061194b8a828b01611700565b92505060c061195c8a828b01611700565b91505092959891949750929550565b60008060408385031215611982576119816120b2565b5b6000611990858286016116eb565b92505060206119a185828601611700565b9150509250929050565b600080604083850312156119c2576119c16120b2565b5b60006119d0858286016116eb565b92505060206119e185828601611715565b9150509250929050565b600060208284031215611a0157611a006120b2565b5b6000611a0f84828501611715565b91505092915050565b611a2181611fe7565b82525050565b611a3081611ff9565b82525050565b611a3f81612005565b82525050565b611a56611a5182612005565b612079565b82525050565b6000611a6782611f36565b611a718185611f41565b9350611a81818560208601612046565b611a8a816120b7565b840191505092915050565b6000611aa2600283611f52565b9150611aad826120c8565b600282019050919050565b6000611ac5602383611f41565b9150611ad0826120f1565b604082019050919050565b6000611ae8601383611f41565b9150611af382612140565b602082019050919050565b6000611b0b601c83611f41565b9150611b1682612169565b602082019050919050565b6000611b2e600e83611f41565b9150611b3982612192565b602082019050919050565b6000611b51601383611f41565b9150611b5c826121bb565b602082019050919050565b6000611b74601b83611f41565b9150611b7f826121e4565b602082019050919050565b6000611b97601383611f41565b9150611ba28261220d565b602082019050919050565b6000611bba601483611f41565b9150611bc582612236565b602082019050919050565b611bd98161202f565b82525050565b611be881612039565b82525050565b6000611bf982611a95565b9150611c058285611a45565b602082019150611c158284611a45565b6020820191508190509392505050565b6000602082019050611c3a6000830184611a18565b92915050565b6000602082019050611c556000830184611a27565b92915050565b6000602082019050611c706000830184611a36565b92915050565b600060c082019050611c8b6000830189611a36565b611c986020830188611a18565b611ca56040830187611a18565b611cb26060830186611bd0565b611cbf6080830185611bd0565b611ccc60a0830184611bd0565b979650505050505050565b600060e082019050611cec600083018a611a36565b611cf96020830189611a18565b611d066040830188611a18565b611d136060830187611bd0565b611d206080830186611bd0565b611d2d60a0830185611bd0565b611d3a60c0830184611a36565b98975050505050505050565b600060a082019050611d5b6000830188611a36565b611d686020830187611a36565b611d756040830186611a36565b611d826060830185611bd0565b611d8f6080830184611a18565b9695505050505050565b6000608082019050611dae6000830187611a36565b611dbb6020830186611bdf565b611dc86040830185611a36565b611dd56060830184611a36565b95945050505050565b60006020820190508181036000830152611df88184611a5c565b905092915050565b60006020820190508181036000830152611e1981611ab8565b9050919050565b60006020820190508181036000830152611e3981611adb565b9050919050565b60006020820190508181036000830152611e5981611afe565b9050919050565b60006020820190508181036000830152611e7981611b21565b9050919050565b60006020820190508181036000830152611e9981611b44565b9050919050565b60006020820190508181036000830152611eb981611b67565b9050919050565b60006020820190508181036000830152611ed981611b8a565b9050919050565b60006020820190508181036000830152611ef981611bad565b9050919050565b6000602082019050611f156000830184611bd0565b92915050565b6000602082019050611f306000830184611bdf565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611f688261202f565b9150611f738361202f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fa857611fa7612083565b5b828201905092915050565b6000611fbe8261202f565b9150611fc98361202f565b925082821015611fdc57611fdb612083565b5b828203905092915050565b6000611ff28261200f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612064578082015181840152602081019050612049565b83811115612073576000848401525b50505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f41465445522031363337333636343030202832307468206f66204e6f76656d6260008201527f6572290000000000000000000000000000000000000000000000000000000000602082015250565b7f583a415554485f414c52454144595f5553454400000000000000000000000000600082015250565b7f626c6f636b7a65726f6c6162732e696f2f782f676574496e7669746500000000600082015250565b7f583a415554485f45585049524544000000000000000000000000000000000000600082015250565b7f4d494e543a204f4e4c595f44524f505a45524f00000000000000000000000000600082015250565b7f583a52454345495645525f49535f544f4b454e5f4f525f5a45524f0000000000600082015250565b7f583a494e56414c49445f5349474e415455524500000000000000000000000000600082015250565b7f583a415554485f4e4f545f5945545f56414c4944000000000000000000000000600082015250565b61226881611fe7565b811461227357600080fd5b50565b61227f81612005565b811461228a57600080fd5b50565b6122968161202f565b81146122a157600080fd5b50565b6122ad81612039565b81146122b857600080fd5b5056fea26469706673582212203b35c4263873cac4f12f75a7f9b5b525787479ebfc2370a18eb60ad9861353cc64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80637ecebe00116100c3578063cd4e3e081161007c578063cd4e3e08146103b8578063d505accf146103e8578063dd62ed3e14610404578063e3ee160e14610434578063e94a010214610450578063ed24911d146104805761014d565b80637ecebe00146102e257806395d89b41146103125780639865027514610330578063a0cc6a681461033a578063a7cd52cb14610358578063a9059cbb146103885761014d565b8063313ce56711610115578063313ce5671461020c5780633408e4701461022a57806340c10f191461024857806342966c6814610264578063569193971461029457806370a08231146102b25761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd146101a057806323b872dd146101be57806330adf81f146101ee575b600080fd5b61015a61049e565b6040516101679190611dde565b60405180910390f35b61018a600480360381019061018591906119ab565b6104d7565b6040516101979190611c40565b60405180910390f35b6101a86104ee565b6040516101b59190611f00565b60405180910390f35b6101d860048036038101906101d391906117ac565b6104f4565b6040516101e59190611c40565b60405180910390f35b6101f6610641565b6040516102039190611c5b565b60405180910390f35b610214610668565b6040516102219190611f1b565b60405180910390f35b61023261066d565b60405161023f9190611f00565b60405180910390f35b610262600480360381019061025d91906119ab565b610675565b005b61027e600480360381019061027991906119eb565b61076b565b60405161028b9190611c40565b60405180910390f35b61029c610780565b6040516102a99190611c25565b60405180910390f35b6102cc60048036038101906102c7919061173f565b6107a6565b6040516102d99190611f00565b60405180910390f35b6102fc60048036038101906102f7919061173f565b6107be565b6040516103099190611f00565b60405180910390f35b61031a6107d6565b6040516103279190611dde565b60405180910390f35b61033861080f565b005b610342610899565b60405161034f9190611c5b565b60405180910390f35b610372600480360381019061036d919061173f565b6108c0565b60405161037f9190611c40565b60405180910390f35b6103a2600480360381019061039d91906119ab565b6108e0565b6040516103af9190611c40565b60405180910390f35b6103d260048036038101906103cd919061173f565b6108f7565b6040516103df9190611c40565b60405180910390f35b61040260048036038101906103fd91906118c9565b610917565b005b61041e6004803603810190610419919061176c565b610aa2565b60405161042b9190611f00565b60405180910390f35b61044e600480360381019061044991906117ff565b610ac7565b005b61046a6004803603810190610465919061196b565b610d14565b6040516104779190611c40565b60405180910390f35b610488610d43565b6040516104959190611c5b565b60405180910390f35b6040518060400160405280600281526020017f665800000000000000000000000000000000000000000000000000000000000081525081565b60006104e4338484610de9565b6001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461062a5782816105a99190611fb3565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610635858585610ed4565b60019150509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b600281565b600046905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc90611e80565b60405180910390fd5b61070f8282611232565b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000610777338361133e565b60019050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b6040518060400160405280600281526020017f665800000000000000000000000000000000000000000000000000000000000081525081565b6361983a804211610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c90611e00565b60405180910390fd5b6000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226760001b81565b60056020528060005260406000206000915054906101000a900460ff1681565b60006108ed338484610ed4565b6001905092915050565b60066020528060005260406000206000915054906101000a900460ff1681565b4284101561095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190611e60565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888600360008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054896040516020016109d996959493929190611c76565b6040516020818303038152906040528051906020012090506001600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a3d9190611f5d565b600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a8d888286868661144a565b610a98888888610de9565b5050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b854211610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0090611ee0565b60405180910390fd5b844210610b4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4290611e60565b60405180910390fd5b600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff1615610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be090611e20565b60405180910390fd5b60007f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226760001b8a8a8a8a8a8a604051602001610c2b9796959493929190611cd7565b604051602081830303815290604052805190602001209050610c508a8286868661144a565b6001600460008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff021916908315150217905550848a73ffffffffffffffffffffffffffffffffffffffff167f98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a560405160405180910390a3610d088a8a8a610ed4565b50505050505050505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60001b7f550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d5660001b7fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660001b610db961066d565b30604051602001610dce959493929190611d46565b60405160208183030381529060405280519060200120905090565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ec79190611f00565b60405180910390a3505050565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015610f3d5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610f7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7390611ea0565b60405180910390fd5b60011515600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461100f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100690611e40565b60405180910390fd5b6110198383611581565b60011515600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146110ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a390611e40565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110f79190611fb3565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111859190611f5d565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112259190611f00565b60405180910390a3505050565b806000546112409190611f5d565b60008190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112919190611f5d565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113329190611f00565b60405180910390a35050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113899190611fb3565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806000546113da9190611fb3565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161143e9190611f00565b60405180910390a35050565b6000611454610d43565b85604051602001611466929190611bee565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516114a39493929190611d99565b6020604051602081039080840390855afa1580156114c5573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561153957508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156f90611ec0565b60405180910390fd5b50505050505050565b60001515600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515148015611631575060001515600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b156116e7576001600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050565b6000813590506116fa8161225f565b92915050565b60008135905061170f81612276565b92915050565b6000813590506117248161228d565b92915050565b600081359050611739816122a4565b92915050565b600060208284031215611755576117546120b2565b5b6000611763848285016116eb565b91505092915050565b60008060408385031215611783576117826120b2565b5b6000611791858286016116eb565b92505060206117a2858286016116eb565b9150509250929050565b6000806000606084860312156117c5576117c46120b2565b5b60006117d3868287016116eb565b93505060206117e4868287016116eb565b92505060406117f586828701611715565b9150509250925092565b60008060008060008060008060006101208a8c031215611822576118216120b2565b5b60006118308c828d016116eb565b99505060206118418c828d016116eb565b98505060406118528c828d01611715565b97505060606118638c828d01611715565b96505060806118748c828d01611715565b95505060a06118858c828d01611700565b94505060c06118968c828d0161172a565b93505060e06118a78c828d01611700565b9250506101006118b98c828d01611700565b9150509295985092959850929598565b600080600080600080600060e0888a0312156118e8576118e76120b2565b5b60006118f68a828b016116eb565b97505060206119078a828b016116eb565b96505060406119188a828b01611715565b95505060606119298a828b01611715565b945050608061193a8a828b0161172a565b93505060a061194b8a828b01611700565b92505060c061195c8a828b01611700565b91505092959891949750929550565b60008060408385031215611982576119816120b2565b5b6000611990858286016116eb565b92505060206119a185828601611700565b9150509250929050565b600080604083850312156119c2576119c16120b2565b5b60006119d0858286016116eb565b92505060206119e185828601611715565b9150509250929050565b600060208284031215611a0157611a006120b2565b5b6000611a0f84828501611715565b91505092915050565b611a2181611fe7565b82525050565b611a3081611ff9565b82525050565b611a3f81612005565b82525050565b611a56611a5182612005565b612079565b82525050565b6000611a6782611f36565b611a718185611f41565b9350611a81818560208601612046565b611a8a816120b7565b840191505092915050565b6000611aa2600283611f52565b9150611aad826120c8565b600282019050919050565b6000611ac5602383611f41565b9150611ad0826120f1565b604082019050919050565b6000611ae8601383611f41565b9150611af382612140565b602082019050919050565b6000611b0b601c83611f41565b9150611b1682612169565b602082019050919050565b6000611b2e600e83611f41565b9150611b3982612192565b602082019050919050565b6000611b51601383611f41565b9150611b5c826121bb565b602082019050919050565b6000611b74601b83611f41565b9150611b7f826121e4565b602082019050919050565b6000611b97601383611f41565b9150611ba28261220d565b602082019050919050565b6000611bba601483611f41565b9150611bc582612236565b602082019050919050565b611bd98161202f565b82525050565b611be881612039565b82525050565b6000611bf982611a95565b9150611c058285611a45565b602082019150611c158284611a45565b6020820191508190509392505050565b6000602082019050611c3a6000830184611a18565b92915050565b6000602082019050611c556000830184611a27565b92915050565b6000602082019050611c706000830184611a36565b92915050565b600060c082019050611c8b6000830189611a36565b611c986020830188611a18565b611ca56040830187611a18565b611cb26060830186611bd0565b611cbf6080830185611bd0565b611ccc60a0830184611bd0565b979650505050505050565b600060e082019050611cec600083018a611a36565b611cf96020830189611a18565b611d066040830188611a18565b611d136060830187611bd0565b611d206080830186611bd0565b611d2d60a0830185611bd0565b611d3a60c0830184611a36565b98975050505050505050565b600060a082019050611d5b6000830188611a36565b611d686020830187611a36565b611d756040830186611a36565b611d826060830185611bd0565b611d8f6080830184611a18565b9695505050505050565b6000608082019050611dae6000830187611a36565b611dbb6020830186611bdf565b611dc86040830185611a36565b611dd56060830184611a36565b95945050505050565b60006020820190508181036000830152611df88184611a5c565b905092915050565b60006020820190508181036000830152611e1981611ab8565b9050919050565b60006020820190508181036000830152611e3981611adb565b9050919050565b60006020820190508181036000830152611e5981611afe565b9050919050565b60006020820190508181036000830152611e7981611b21565b9050919050565b60006020820190508181036000830152611e9981611b44565b9050919050565b60006020820190508181036000830152611eb981611b67565b9050919050565b60006020820190508181036000830152611ed981611b8a565b9050919050565b60006020820190508181036000830152611ef981611bad565b9050919050565b6000602082019050611f156000830184611bd0565b92915050565b6000602082019050611f306000830184611bdf565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611f688261202f565b9150611f738361202f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fa857611fa7612083565b5b828201905092915050565b6000611fbe8261202f565b9150611fc98361202f565b925082821015611fdc57611fdb612083565b5b828203905092915050565b6000611ff28261200f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612064578082015181840152602081019050612049565b83811115612073576000848401525b50505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f41465445522031363337333636343030202832307468206f66204e6f76656d6260008201527f6572290000000000000000000000000000000000000000000000000000000000602082015250565b7f583a415554485f414c52454144595f5553454400000000000000000000000000600082015250565b7f626c6f636b7a65726f6c6162732e696f2f782f676574496e7669746500000000600082015250565b7f583a415554485f45585049524544000000000000000000000000000000000000600082015250565b7f4d494e543a204f4e4c595f44524f505a45524f00000000000000000000000000600082015250565b7f583a52454345495645525f49535f544f4b454e5f4f525f5a45524f0000000000600082015250565b7f583a494e56414c49445f5349474e415455524500000000000000000000000000600082015250565b7f583a415554485f4e4f545f5945545f56414c4944000000000000000000000000600082015250565b61226881611fe7565b811461227357600080fd5b50565b61227f81612005565b811461228a57600080fd5b50565b6122968161202f565b81146122a157600080fd5b50565b6122ad81612039565b81146122b857600080fd5b5056fea26469706673582212203b35c4263873cac4f12f75a7f9b5b525787479ebfc2370a18eb60ad9861353cc64736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "allowance": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "balanceOf": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "totalSupply": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1718,
        "contract": "contracts/FakeX.sol:FakeX",
        "label": "totalSupply",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1723,
        "contract": "contracts/FakeX.sol:FakeX",
        "label": "balanceOf",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1730,
        "contract": "contracts/FakeX.sol:FakeX",
        "label": "allowance",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1734,
        "contract": "contracts/FakeX.sol:FakeX",
        "label": "nonces",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1740,
        "contract": "contracts/FakeX.sol:FakeX",
        "label": "authorizationState",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))"
      },
      {
        "astId": 1744,
        "contract": "contracts/FakeX.sol:FakeX",
        "label": "allowlist",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1748,
        "contract": "contracts/FakeX.sol:FakeX",
        "label": "invitationSpent",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1750,
        "contract": "contracts/FakeX.sol:FakeX",
        "label": "dropzero",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}